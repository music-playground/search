parameters:
    albumsIndexName: albums1
    artistsIndexName: artists
    playlistsIndexName: playlists
    maxPaginationCount: 100
    maxQLength: 100

services:
    _defaults:
        autowire: true
        autoconfigure: true

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Shared\Infrastructure\ElasticSearch\ClientFactory:
        arguments:
            - '%env(ELASTICSEARCH_HOSTS)%'

    elasticsearch.client:
        factory: ['@App\Shared\Infrastructure\ElasticSearch\ClientFactory', 'create']
        class: Elastic\Elasticsearch\Client

    App\Search\Infrastructure\Repository\ArtistRepository:
        arguments:
            $client: '@elasticsearch.client'
            $index: '%artistsIndexName%'

    App\Search\Infrastructure\Repository\AlbumRepository:
        arguments:
            $client: '@elasticsearch.client'
            $index: '%albumsIndexName%'
    App\Search\Infrastructure\Repository\PlaylistRepository:
        arguments:
            $client: '@elasticsearch.client'
            $index: '%playlistsIndexName%'
    App\Search\Infrastructure\Repository\CollectionRepository:
        arguments:
            $client: '@elasticsearch.client'
            $albumIndex: '%albumsIndexName%'
            $playlistIndex: '%playlistsIndexName%'
            $fileHost: '%env(FILE_SERVICE_HOST)%'
            $albumFileDomain: 'album-cover'
            $playlistFileDomain: 'playlist-cover'

    App\Search\Infrastructure\Controller\CollectionController:
        arguments:
            $maxQLength: '%maxQLength%'
            $maxCount: '%maxPaginationCount%'

    App\Search\Infrastructure\Controller\ArtistController:
        arguments:
            $maxQLength: '%maxQLength%'
            $maxCount: '%maxPaginationCount%'
